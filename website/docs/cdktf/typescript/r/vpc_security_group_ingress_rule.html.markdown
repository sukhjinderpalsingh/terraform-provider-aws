---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_security_group_ingress_rule"
description: |-
  Provides a VPC security group ingress rule resource.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_security_group_ingress_rule

Manages an inbound (ingress) rule for a security group.

When specifying an inbound rule for your security group in a VPC, the configuration must include a source for the traffic.

~> **NOTE on Security Groups and Security Group Rules:** Terraform currently provides a [Security Group resource](security_group.html) with `ingress` and `egress` rules defined in-line and a [Security Group Rule resource](security_group_rule.html) which manages one or more `ingress` or
`egress` rules. Both of these resource were added before AWS assigned a [security group rule unique ID](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules.html), and they do not work well in all scenarios using the`description` and `tags` attributes, which rely on the unique ID.
The `awsVpcSecurityGroupIngressRule` resource has been added to address these limitations and should be used for all new security group rules.
You should not use the `awsVpcSecurityGroupIngressRule` resource in conjunction with an `awsSecurityGroup` resource with in-line rules or with `awsSecurityGroupRule` resources defined for the same Security Group, as rule conflicts may occur and rules will be overwritten.

## Example Usage

```typescript
// Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { Token, TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { VpcSecurityGroupIngressRule } from "./.gen/providers/aws/vpc-security-group-ingress-rule";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new VpcSecurityGroupIngressRule(this, "example", {
      cidrIpv4: "10.0.0.0/8",
      fromPort: 80,
      ipProtocol: "tcp",
      securityGroupId: Token.asString(awsSecurityGroupExample.id),
      toPort: 80,
    });
  }
}

```

## Argument Reference

This resource supports the following arguments:

~> **Note** Although `cidrIpv4`, `cidrIpv6`, `prefixListId`, and `referencedSecurityGroupId` are all marked as optional, you *must* provide one of them in order to configure the destination of the traffic. The `fromPort` and `toPort` arguments are required unless `ipProtocol` is set to `1` or `icmpv6`.

* `cidrIpv4` - (Optional) The source IPv4 CIDR range.
* `cidrIpv6` - (Optional) The source IPv6 CIDR range.
* `description` - (Optional) The security group rule description.
* `fromPort` - (Optional) The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type.
* `ipProtocol` - (Required) The IP protocol name or number. Use `1` to specify all protocols. Note that if `ipProtocol` is set to `1`, it translates to all protocols, all port ranges, and `fromPort` and `toPort` values should not be defined.
* `prefixListId` - (Optional) The ID of the source prefix list.
* `referencedSecurityGroupId` - (Optional) The source security group that is referenced in the rule.
* `securityGroupId` - (Required) The ID of the security group.
* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `toPort` - (Optional) The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - The Amazon Resource Name (ARN) of the security group rule.
* `securityGroupRuleId` - The ID of the security group rule.
* `tagsAll` - A map of tags assigned to the resource, including those inherited from the provider [`defaultTags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import security group ingress rules using the `securityGroupRuleId`. For example:

```typescript
// Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
  }
}

```

Using `terraform import`, import security group ingress rules using the `securityGroupRuleId`. For example:

```console
% terraform import aws_vpc_security_group_ingress_rule.example sgr-02108b27edd666983
```

<!-- cache-key: cdktf-0.17.1 input-342da4e18ab78aa5e23ae36caa8f6f8db7a836ccfe08cb53a9e1fe0b87ef8b39 -->